var searchIndex = JSON.parse('{\
"automerge":{"doc":"Automerge","t":"DDDDENNDNDNNNDNNNNNNDNNNNNNNNNDNNDNNNNNNNNNNNNNNNENDNNNNNNNNNNNNNEEENEEDDNNNNENCCCENRINDNENGNENNNNNEENLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLKLLKLLKLLLLLLLKLLKLLLLLLKLLKLLLLLLLLLMLLALLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKLLKLLLKLLKLLLKLLKLLLLLLLLLLLLLLLLKLLKLLLAKLLKLLLLLLLMLLLLLMKLLLAMLKLLKLLLLLLLALLMLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLALLKLLLKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDNDDNDNDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLNNNEDDDNLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLMLLLLRNNNNNNNDEDNNNNEMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMDDEDDNNNNNEDINNMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMMMMLLLLLLLMMMLKKMLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDNDNGDIDKLLLLLLLLLMLLLKLLMLLLLLLLLLLLLLLLLLLMLKLKLKLLLLLLLLLLLLLKLLLMLLLMKLKLKLMLLLKLKLLLMLLLLLLLLLLLLKLLLLLLLLL","n":["ActorId","AutoCommit","AutoSerde","Automerge","AutomergeError","Boolean","Bytes","Change","ChangeGraph","ChangeHash","Check","ConvertToText","Counter","Cursor","Deflate","Delete","DontCheck","DuplicateSeqNumber","EmptyStringKey","Error","ExpandedChange","F64","Fail","HexDecode","HydrateError","Id","Ignore","IncorrectLength","Increment","Int","InvalidActorId","InvalidActorId","InvalidChangeHashBytes","InvalidChangeHashSlice","InvalidCharacter","InvalidCursor","InvalidCursorFormat","InvalidHash","InvalidIndex","InvalidObjId","InvalidObjIdFormat","InvalidOp","InvalidSeq","InvalidType","InvalidValueType","InvalidVersion","LeftoverData","List","Load","LoadChangeError","LoadChangeError","LoadOptions","Make","Map","Map","MarkBegin","MarkEnd","MissingCounter","MissingDeps","MissingHash","NoMigration","NoVersion","NonChangeCompressed","NotAnObject","Null","ObjId","ObjIdFromBytesError","ObjType","Object","OnPartialLoad","OpType","Parent","Parents","Parse","ParseActor","ParseActorIdxHint","ParseActorLen","ParseChangeHashError","ParseCounter","Patch","PatchAction","PatchLog","Prop","Put","ROOT","ReadDoc","Root","SaveOptions","Scalar","ScalarValue","Seq","SequenceTree","Str","StringMigration","Table","Text","Timestamp","Uint","Unknown","Value","VerificationMode","WrongChunkType","actor_id","actor_id","apply_changes","apply_changes","apply_changes_log_patches","as_index","as_ref","as_ref","as_ref","as_str","base_heads","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","commit","commit_with","counter","counter","current_state","decode","default","default","default","default","deflate","delete","deps","deps","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","diff_cursor","diff_incremental","dump","empty_change","empty_commit","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra_bytes","extra_bytes","f64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","fork","fork_at","fork_at","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","from_str","generate_sync_message","get","get","get","get_actor","get_actor","get_all","get_all","get_all","get_all_at","get_all_at","get_all_at","get_at","get_at","get_at","get_change_by_hash","get_change_by_hash","get_change_by_hash","get_change_by_hash","get_changes","get_changes","get_changes_added","get_changes_added","get_cursor","get_cursor","get_cursor","get_cursor_position","get_cursor_position","get_cursor_position","get_heads","get_heads","get_last_local_change","get_last_local_change","get_marks","get_marks","get_marks","get_missing_deps","get_missing_deps","get_missing_deps","get_missing_deps","get_text_rep","hash","hash","hash","hash","hash","hash","hash_for_opid","hash_for_opid","hydrate","hydrate","hydrate","hydrate_list","hydrate_map","increment","insert","insert_object","int","integrate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_bytes","into_iter","into_owned","into_scalar","into_string","into_string","is_boolean","is_boolean","is_bytes","is_bytes","is_counter","is_counter","is_empty","is_empty","is_f64","is_f64","is_int","is_int","is_null","is_null","is_object","is_scalar","is_sequence","is_str","is_str","is_timestamp","is_timestamp","is_uint","is_uint","isolate","iter","keys","keys","keys","keys_at","keys_at","keys_at","len","length","length","length","length_at","length_at","length_at","list","list_range","list_range","list_range","list_range_at","list_range_at","list_range_at","load","load","load_incremental","load_incremental","load_incremental_log_patches","load_unverified_heads","load_unverified_heads","load_with","load_with","load_with_options","load_with_options","make_patches","make_patches","map","map_range","map_range","map_range","map_range_at","map_range_at","map_range_at","mark","marks","marks","marks","marks","marks_at","marks_at","marks_at","max_op","merge","merge","merge_and_log_patches","message","message","migrate_strings","new","new","new","next","obj","object_type","object_type","object_type","on_partial_load","op_tree","operations","other_actor_ids","parents","parents","parents","parents_at","parents_at","parents_at","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch_log","patches","path","pending_ops","prop","put","put_object","random","raw_bytes","receive_sync_message","receive_sync_message_log_patches","reset_diff_cursor","retain_orphans","rollback","save","save","save_after","save_after","save_and_verify","save_and_verify","save_incremental","save_nocompress","save_nocompress","save_with_options","save_with_options","seq","seq","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_actor","set_actor","set_text_rep","source","source","splice","splice_text","start_op","start_op","str","sync","sync","table","text","text","text","text","text_at","text_at","text_at","time","timestamp","timestamp","to_bool","to_bool","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_f64","to_f64","to_hex_string","to_i64","to_i64","to_objtype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scalar","to_str","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u64","to_u64","transact","transact_and_log_patches","transact_and_log_patches_with","transact_with","transaction","transaction","transaction_at","transaction_log_patches","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint","unmark","update_diff_cursor","values","values","values","values_at","values_at","values_at","verification_mode","visible","visible_path","visualise_optree","visualise_optree","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_actor","with_actor","with_text_rep","expected","unexpected","actual","bytes","type_code","List","List","ListValue","Map","Map","MapValue","Scalar","Text","Text","Value","apply_patches","as_list","as_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref_mut","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_mut","into","into","into","into","into","into","is_object","is_scalar","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Keys","ListRange","ListRangeItem","MapRange","MapRangeItem","Values","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","conflict","conflict","default","default","default","default","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","id","index","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","key","marks","multiunzip","new","next","next","next","next","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","After","Before","Both","ExpandMark","Mark","MarkData","MarkSet","None","after","before","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","end","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into_owned","is_empty","iter","len","name","name","new","start","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","B","Array","Conflict","DeleteMap","DeleteSeq","Increment","Insert","Mark","Patch","PatchAction","PatchLog","PutMap","PutSeq","SpliceText","String","TextRepresentation","action","active","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","inactive","into","into","into","into","is_array","is_string","new","null","obj","path","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","conflict","conflict","index","index","index","index","key","key","length","marks","marks","marks","prop","prop","value","value","value","value","values","BloomFilter","DecodeBloomError","DecodeStateError","Have","Message","NotEnoughInput","NotEnoughInput","Parse","Parse","ReadChangeOps","ReadMessageError","State","SyncDoc","WrongType","WrongType","bloom","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_hash","decode","decode","default","default","default","encode","encode","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_hashes","generate_sync_message","hash","hash","hash","have","have_responded","heads","in_flight","into","into","into","into","into","into","into","last_sent_heads","last_sync","need","new","receive_sync_message","receive_sync_message_log_patches","sent_hashes","serialize","serialize","serialize","shared_heads","source","their_have","their_heads","their_need","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected_one_of","found","expected_one_of","found","CommitOptions","Err","Failure","Ok","Result","Success","Transactable","Transaction","base_heads","base_heads","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","commit","commit_with","default","delete","delete","drop","error","fmt","fmt","fmt","fmt","from","from","from","from","get","get_all","get_all_at","get_at","get_change_by_hash","get_cursor","get_cursor_position","get_heads","get_marks","get_missing_deps","hash","hash_for_opid","increment","increment","insert","insert","insert_object","insert_object","into","into","into","into","keys","keys_at","length","length_at","list_range","list_range_at","map_range","map_range_at","mark","mark","marks","marks_at","message","object_type","parents","parents_at","patch_log","pending_ops","pending_ops","put","put","put_object","put_object","result","rollback","set_message","set_time","splice","splice","splice_text","splice_text","text","text_at","time","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unmark","unmark","values","values_at","vzip","vzip","vzip","vzip","with_message","with_time"],"q":[[0,"automerge"],[823,"automerge::AutomergeError"],[825,"automerge::ParseChangeHashError"],[826,"automerge::ScalarValue"],[828,"automerge::hydrate"],[935,"automerge::iter"],[1019,"automerge::marks"],[1097,"automerge::op_tree"],[1098,"automerge::patches"],[1176,"automerge::patches::PatchAction"],[1195,"automerge::sync"],[1334,"automerge::sync::DecodeStateError"],[1336,"automerge::sync::ReadMessageError"],[1338,"automerge::transaction"],[1450,"core::result"],[1451,"core::iter::traits::collect"],[1452,"core::option"],[1453,"alloc::vec"],[1454,"alloc::borrow"],[1455,"core::cmp"],[1456,"core::convert"],[1457,"core::convert"],[1458,"core::iter::traits::collect"],[1459,"core::fmt"],[1460,"alloc::string"],[1461,"hex::error"],[1462,"smol_str"],[1463,"core::hash"],[1464,"core::ops::range"],[1465,"serde::ser"],[1466,"core::error"],[1467,"core::num::nonzero"],[1468,"core::ops::function"],[1469,"core::any"],[1470,"std::collections::hash::map"],[1471,"core::iter::traits::iterator"],[1472,"core::iter::traits::exact_size"]],"d":["An actor id is a sequence of bytes. By default we use a …","An automerge document that automatically manages …","A wrapper type which implements <code>serde::Serialize</code> for a …","An automerge document which does not manage transactions …","","","","","","The sha256 hash of a change.","","Convert all strings to text","","An identifier of a position in a Sequence (either …","","","","","","Fail the entire load","A change represents a group of operations performed by an …","","","","","","Ignore the error and return the loaded changes","","","","","","","","","","","","","","","","","","","","","A sequence of arbitrary values","","","","","","A map","A property in a map","","","","","","Don’t convert anything","","","","","An identifier for an object in a document","","The type of an object","An composite object of type <code>ObjType</code>","What to do when loading a document partially succeeds","","A component of a path to an object","An iterator over the “parents” of an object","","","","","","","","","","A property of an object","","The object ID for the root map of a document","Methods for reading values from an automerge document","","Options to pass to <code>[Automerge::save_with_options]</code> and …","A non composite value","A value which is not a composite value","An index into a sequence","","","Whether to convert <code>ScalarValue::Str</code>s in the loaded …","Retained for backwards compatibility, tables are identical …","A sequence of characters","","","A value from a future version of automerge","The type of values in an automerge document","","","","The actor that performed this change.","","Apply changes to this document.","Like <code>Self::apply_changes</code> but log the resulting changes to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit any uncommitted changes","Commit the current operations with some options.","","","Get a set of <code>Patch</code>es which materialize the current state …","","","","","","Whether to apply DEFLATE compression to the RLE encoded …","","","The dependencies of this change.","","","","","","Generates a diff from <code>before</code> to <code>after</code>","Create patches representing the change in the current …","Returns the cursor set by <code>Self::update_diff_cursor</code>","This is a convience function that encapsulates the …","","Generate an empty change","Generate an empty change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fork this document at the current point for use by a …","","Fork this document at the given heads","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Get a value out of the document.","","","","Get the current actor id of this document.","Get all conflicting values out of the document at this …","","","Get all possibly conflicting values for a key as at <code>heads</code>","","","Get the value of the given key as at <code>heads</code>, see <code>[Self::get]</code>","","","Get a change by its hash.","","","","","","Get changes in <code>other</code> that are not in `self","Get changes in <code>other</code> that are not in `self","Obtain the stable address (Cursor) for a <code>usize</code> position in …","","","Translate Cursor in a Sequence into an absolute position …","","","Get the current heads of the document.","Get the heads of this document.","Get the last change made by this documents actor ID","Get the last change this actor made to the document.","","","","Get the hashes of the changes in this document that aren’…","","","","","","","","","","The hash of this change.","Get the hash of the change that contains the given opid.","Get the hash of the change that contains the given opid.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether this document has any operations","","","","","","","","","","","","","","","","","","","Get the keys of the object <code>obj</code>.","","","Get the keys of the object <code>obj</code> as at <code>heads</code>","","","","Get the length of the given object.","","","Get the length of the given object as at <code>heads</code>","","","","Iterate over the indexes and values of the list or text <code>obj</code>…","","","Iterate over the indexes and values of the list or text <code>obj</code>…","","","","Load a document.","Load an incremental save of a document.","Load an incremental save of a document.","Like <code>Self::load_incremental</code> but log the changes to the …","","Load a document without verifying the head hashes","","Load a document, with options","","Load a document, with options","Generate the patches recorded in <code>patch_log</code>","Create the patches from a <code>PatchLog</code>","","Iterate over the keys and values of the map <code>obj</code> in the …","","","Iterate over the keys and values of the map <code>obj</code> in the …","","","","","Get all marks on a current sequence","","","Get all marks on a sequence at a given heads","","","","Takes all the changes in <code>other</code> which are not in <code>self</code> and …","Takes all the changes in <code>other</code> which are not in <code>self</code> and …","Takes all the changes in <code>other</code> which are not in <code>self</code> and …","","The message of this change.","Whether to convert <code>ScalarValue::Str</code>s in the loaded …","","","Create a new document with a random actor id.","","The object ID this component refers to","Get the type of this object, if it is an object.","","","What to do when loading a document partially succeeds","","The operations performed in this change.","","Get the parents of an object in the document tree.","","","Get the parents of the object <code>obj</code> as at <code>heads</code>","","","","","","","A <code>PatchLog</code> to log the changes required to materialize the …","","Return the path this <code>Parents</code> represents","","The property within <code>obj</code> this component refers to","","","","","","","Erases the diff cursor created by <code>Self::update_diff_cursor</code> …","Whether to save changes which we do not have the …","Remove any changes that have been made in the current …","Save the entirety of this document in a compact form.","Save the entirety of this document in a compact form.","Save everything which is not a (transitive) dependency of …","Save the changes since the given heads","Save the document and attempt to load it before returning …","Save the document and attempt to load it before returning …","Save the changes since the last call to Self::save`","Save this document, but don’t run it through DEFLATE …","Save this document, but don’t run it through DEFLATE …","","Save the entirety of this document in a compact form.","","The index of this change in the changes from this actor.","","","","","","","","","Set the actor id for this document.","","","","Splice new elements into the given sequence. Returns a …","","","The start operation index. Starts at 1.","","Sync Protocol","An implementation of <code>crate::sync::SyncDoc</code> for this …","","Get the string represented by the given text object.","","","","Get the string represented by the given text object as at …","","","The time that this change was committed.","","","","","","Serialize this object ID to a byte array.","","","","","","","If this value can be coerced to an i64, return the i64 …","If this value can be coerced to an i64, return the i64 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run a transaction on this document in a closure, …","Run a transaction on this document in a closure, …","Like <code>Self::transact_and_log_patches</code> but with a function …","Like <code>Self::transact</code> but with a function for generating the …","","Start a transaction.","Start a transaction isolated at a given heads","Start a transaction which records changes in a <code>PatchLog</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>Self::diff_cursor</code> to current heads of the …","Iterate over the values in a map, list, or text object","","","Iterate over the values in a map, list, or text object as …","","","Whether to verify the head hashes after loading","Whether this component is “visible”","Like <code>path</code> but returns <code>None</code> if the target is not visible","Return a graphviz representation of the opset.","Return a graphviz representation of the opset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the actor id for this document.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterator created by the <code>crate::ReadDoc::keys()</code> and …","Iterator created by the <code>crate::ReadDoc::list_range()</code> and …","","Iterator created by the <code>crate::ReadDoc::map_range()</code> and …","","Iterator created by the <code>crate::ReadDoc::values()</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ExpandMark allows you to decide whether new text inserted …","Marks let you store out-of-bound information about …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A new conflict has appeared","A key was deleted from a map","One or more indices were removed from a sequence","A counter was incremented","One or more elements were inserted into a sequence","Some marks within a text object were added or removed","A change to the current state of the document","","A record of changes made to a document","A key was created or updated in a map","An index in a sequence was updated","Some text was spliced into a text object","","","The change this patch represents","Create a new <code>PatchLog</code> which does record changes.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>PatchLog</code> which doesn’t record any changes.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new <code>PatchLog</code>","","The object this patch modifies","The path to the property in the parent object where this …","","","","","","","","","","","","","","","","","","","","","","Whether there is a conflict at this key. If there is a …","Whether there is a conflict at this index. If there is a …","","","","","","","","All marks currently active for these values","All marks currently active for this span of text","","The property of the counter that was incremented within …","The conflicted property","The value that was inserted and the object ID of the …","The value that was set and the object ID of the object …","The text that was inserted","The amount incremented, may be negative","The values that were inserted, in order that they appear. …","","","","A summary of the changes that the sender of the message …","The sync message to be sent.","","","","","","","The state of synchronisation with a peer.","A document which can take part in the sync protocol","","","A bloom filter summarising all of the changes that the …","","","","","","","","","","","","","","","The changes for the recipient to apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generate a sync message for the remote peer represented by …","","","","A summary of the changes that the sender already has.","Whether we have ever responded to the other end. This is …","The heads of the sender.","<code>generate_sync_message</code> should return <code>None</code> if there are no …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The heads we last sent","The heads at the time of the last successful sync with …","The hashes of any changes that are being explicitly …","","Apply a received sync message to this document and …","Apply a received sync message to this document and …","The hashes we have sent in this session","","","","The hashes which we know both peers have","","The bloom filters summarising what they said they have","The heads we last received from them","Any specific changes they last said they needed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional metadata for a commit.","Contains the error value","The result of a failed, and rolled back, transaction.","Contains the success value","","The result of a successful, and committed, transaction.","A way of mutating a document within a single change.","A transaction on a document. Transactions group operations …","The heads this transaction will be based on","","","","","","","","","","The number of operations cancelled.","Commit the operations performed in this transaction, …","Commit the operations in this transaction with some …","","Delete the value at prop in the object.","","","The error returned from the transaction.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Get the heads of the document before this transaction was …","","","The hash of the change, will be <code>None</code> if the transaction …","Get the hash of the change that contains the given opid.","Increment the counter at the prop in the object by <code>value</code>.","","Insert a value into a list at the given index.","","Insert an object into a list at the given index.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Mark a sequence","","","","","","","","","Get the number of pending operations in this transaction.","Get the number of pending operations in this transaction.","Set the value of property <code>P</code> to value <code>V</code> in object <code>obj</code>.","Set the value of property <code>P</code> to value <code>V</code> in object <code>obj</code>.","Set the value of property <code>P</code> to the new object <code>V</code> in object …","","The result of the transaction.","Undo the operations added in this transaction, returning …","Add a message to the commit.","Add a timestamp to the commit.","replace a section of a list. If <code>del</code> is positive then N …","Splice new elements into the given sequence. Returns a …","Like <code>Self::splice</code> but for text.","","","","","","","","","","","","","","","","","Remove a Mark from a sequence","","","","","","","","Add a message to the commit.","Add a timestamp to the commit."],"i":[0,0,0,0,0,26,26,0,5,0,53,45,26,0,5,25,53,5,5,21,0,26,5,54,5,13,21,54,25,26,0,5,5,0,5,5,5,5,5,5,5,5,5,51,5,51,49,24,5,0,5,0,25,24,10,25,25,5,5,5,45,51,5,5,26,0,0,0,20,0,0,0,0,49,51,51,51,0,51,0,0,0,0,25,0,0,13,0,20,0,10,0,26,0,24,24,26,26,26,0,0,49,1,23,3,8,8,10,13,2,16,10,3,3,21,45,32,8,33,46,1,49,22,5,50,40,13,51,23,52,41,53,2,24,25,10,16,54,20,26,3,21,45,32,8,33,46,1,49,22,5,50,40,13,51,23,52,41,53,2,24,25,10,16,54,20,26,1,20,3,21,8,1,22,13,23,2,24,25,10,16,20,26,3,21,8,1,22,13,23,2,24,25,10,16,20,26,13,2,10,16,3,3,20,26,8,1,3,32,8,33,33,3,1,23,23,2,24,16,26,3,8,3,3,8,3,8,2,16,2,16,21,1,22,5,40,13,23,41,2,24,25,10,16,20,26,21,40,13,41,2,24,10,16,1,23,20,3,21,45,32,8,33,46,1,49,49,22,22,5,5,50,50,40,40,13,13,51,51,23,52,41,53,2,2,24,24,25,10,10,16,16,54,54,20,20,26,26,3,8,3,8,3,21,45,32,8,33,46,46,1,1,49,22,5,5,5,50,40,13,51,23,23,52,41,53,2,2,2,2,2,2,2,24,25,25,25,10,10,10,10,10,10,10,16,54,54,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,16,8,48,3,8,3,8,48,3,8,48,3,8,48,3,8,48,3,3,8,3,8,3,8,48,3,8,48,3,8,3,8,3,8,48,3,8,48,3,3,8,3,1,13,2,24,16,23,3,8,0,3,8,0,0,3,3,3,20,3,3,21,45,32,8,33,46,1,49,22,5,50,40,13,51,23,52,41,53,2,24,25,10,16,54,20,26,20,26,52,20,20,20,26,20,26,20,26,20,26,8,1,20,26,20,26,20,26,20,20,24,20,26,20,26,20,26,3,0,48,3,8,48,3,8,1,48,3,8,48,3,8,20,48,3,8,48,3,8,3,8,3,8,8,3,8,3,8,3,8,3,8,20,48,3,8,48,3,8,3,0,48,3,8,48,3,8,1,3,8,8,1,23,32,3,32,8,52,41,48,3,8,32,0,23,1,48,3,8,48,3,8,13,2,10,16,32,0,52,3,41,3,3,2,1,8,8,3,33,3,3,8,3,8,3,8,3,3,8,3,8,1,23,46,13,23,2,24,16,26,3,8,3,5,54,3,3,1,23,20,0,3,20,48,3,8,20,48,3,8,23,1,20,20,26,22,13,2,20,26,20,26,2,20,26,20,3,21,8,1,22,13,23,2,24,25,10,16,20,20,26,20,20,26,49,22,5,50,40,13,51,2,24,10,16,54,20,26,20,26,8,8,8,8,0,8,8,8,3,21,45,32,8,33,46,1,1,49,22,22,22,22,22,5,50,40,13,13,51,23,52,41,53,2,2,2,24,25,10,16,16,54,20,26,3,21,45,32,8,33,46,1,49,22,5,50,40,13,51,23,52,41,53,2,24,25,10,16,54,20,26,3,21,45,32,8,33,46,1,49,22,5,50,40,13,51,23,52,41,53,2,24,25,10,16,54,20,26,20,3,3,48,3,8,48,3,8,32,41,52,3,8,3,21,45,32,8,33,46,1,49,22,5,50,40,13,51,23,52,41,53,2,24,25,10,16,54,20,26,3,8,3,103,103,104,105,105,0,59,0,0,59,0,59,0,59,0,59,59,59,84,86,85,87,88,59,84,86,85,87,88,59,84,86,85,87,88,59,84,86,85,87,88,59,84,85,88,85,85,84,86,85,87,88,59,84,86,85,87,88,59,84,86,85,85,87,88,59,59,59,59,59,84,85,84,85,84,86,85,87,88,59,59,59,84,86,85,87,88,59,84,86,85,87,88,59,84,86,85,87,88,59,84,86,85,87,88,59,84,86,85,87,88,59,0,0,0,0,0,0,69,71,68,91,90,83,69,71,68,91,90,83,91,90,69,71,68,83,90,69,71,68,91,90,83,69,71,68,91,90,83,91,90,91,69,71,68,91,90,83,69,71,68,83,90,91,83,90,69,71,68,83,69,71,68,91,90,83,69,71,68,91,90,83,69,71,68,91,90,83,91,90,69,71,68,91,90,83,73,73,73,0,0,0,0,73,73,73,72,66,92,73,72,66,92,73,72,66,92,73,72,66,92,73,66,73,72,72,66,92,73,72,66,92,92,73,72,66,92,73,73,72,66,92,73,72,66,66,66,72,92,72,72,72,66,92,73,92,72,66,92,73,72,66,92,73,72,66,92,73,72,92,72,66,92,73,0,30,94,94,94,94,94,94,0,0,0,94,94,94,30,0,31,9,31,94,9,30,31,94,9,30,31,94,9,30,31,94,9,30,30,31,94,30,31,94,94,9,30,31,94,9,30,9,31,94,9,30,30,30,9,9,31,31,31,94,9,30,94,31,94,9,30,31,94,9,30,31,94,9,30,31,94,9,30,106,107,107,108,109,110,106,111,110,108,109,112,113,114,106,107,109,113,108,0,0,0,0,0,97,98,97,98,98,0,0,0,97,98,96,95,99,97,64,96,98,65,95,99,97,64,96,98,65,65,95,64,96,65,95,64,96,65,95,64,65,95,64,96,64,65,95,64,96,65,95,64,96,95,99,99,97,97,64,96,98,98,65,95,99,97,64,96,98,65,95,78,95,64,96,65,64,65,64,95,99,97,64,96,98,65,64,96,65,64,78,78,64,95,96,65,64,98,64,64,64,95,95,64,96,65,99,97,98,95,95,99,97,64,96,98,65,95,99,97,64,96,98,65,95,99,97,64,96,98,65,95,99,97,64,96,98,65,115,115,116,116,0,79,0,79,0,0,0,0,117,81,28,81,101,102,28,81,101,102,102,81,81,28,117,81,81,102,28,81,101,102,28,81,101,102,81,81,81,81,81,81,81,81,81,81,101,81,117,81,117,81,117,81,28,81,101,102,81,81,81,81,81,81,81,81,117,81,81,81,28,81,81,81,101,117,81,117,81,117,81,101,81,28,28,117,81,117,81,81,81,28,28,81,101,102,28,81,101,102,28,81,101,102,117,81,81,81,28,81,101,102,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[3,-1],[[6,[4,5]]],7],[[8,-1],[[6,[4,5]]],7],[[8,-1,9],[[6,[4,5]]],7],[10,[[12,[11]]]],[13,13],[2,[[15,[14]]]],[16,[[15,[14]]]],[10,[[12,[17]]]],[3,[[18,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[19,[[15,[14]]]]]],[[[18,[14]]],20],[3,3],[21,21],[8,8],[1,1],[22,22],[13,13],[23,23],[2,2],[24,24],[25,25],[10,10],[16,16],[20,20],[26,26],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[13,13],27],[[2,2],27],[[10,10],27],[[16,16],27],[3,[[12,[16]]]],[[3,28],[[12,[16]]]],[29,20],[29,26],[[8,30],[[18,[31]]]],[1,23],[[],3],[[],32],[[],8],[[],33],0,[[3,-1,-2],[[6,[4,5]]],[[34,[13]]],[[35,[10]]]],[1,[[15,[16]]]],0,[-1,[[6,[23]]],36],[-1,[[6,[2]]],36],[-1,[[6,[24]]],36],[-1,[[6,[16]]],36],[-1,[[6,[26]]],36],[[3,[15,[16]],[15,[16]]],[[18,[31]]]],[[8,[15,[16]],[15,[16]],30],[[18,[31]]]],[3,[[18,[16]]]],[3,[[18,[31]]]],[8,4],[[3,28],16],[[8,28],16],[-1,-2,[],[[38,[37]]]],[-1,-2,[],[[38,[37]]]],[-1,-2,[],[[38,[37]]]],[-1,-2,[],[[38,[37]]]],[[21,21],39],[[1,1],39],[[22,22],39],[[5,5],39],[[40,40],39],[[13,13],39],[[23,23],39],[[41,41],39],[[2,2],39],[[24,24],39],[[25,25],39],[[10,10],39],[[16,16],39],[[20,20],39],[[26,26],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[1,[[15,[14]]]],0,[42,20],[[3,43],44],[[21,43],44],[[45,43],44],[[32,43],44],[[8,43],44],[[33,43],44],[[[46,[-1]],43],44,[47,48]],[[1,43],44],[[49,43],44],[[49,43],44],[[22,43],44],[[22,43],44],[[5,43],44],[[5,43],44],[[50,43],44],[[50,43],44],[[40,43],44],[[40,43],44],[[13,43],44],[[13,43],44],[[51,43],44],[[51,43],44],[[23,43],44],[[52,43],44],[[41,43],44],[[53,43],44],[[2,43],44],[[2,43],44],[[24,43],44],[[24,43],44],[[25,43],44],[[10,43],44],[[10,43],44],[[16,43],44],[[16,43],44],[[54,43],44],[[54,43],44],[[20,43],44],[[20,43],44],[[26,43],44],[[26,43],44],[3,3],[8,8],[[3,[15,[16]]],[[6,[3,5]]]],[[8,[15,[16]]],[[6,[8,5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[46,[-1]]],48],[23,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,5],[-1,-1,[]],[49,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[18,[14]]],2],[[[15,[14]]],2],[-1,-1,[]],[[[55,[14]]],2],[56,2],[[[18,[14]]],2],[[[55,[14]]],2],[-1,-1,[]],[-1,-1,[]],[24,25],[26,25],[17,10],[11,10],[-1,-1,[]],[42,10],[11,10],[57,10],[57,10],[-1,-1,[]],[-1,-1,[]],[58,54],[59,20],[60,20],[57,20],[37,20],[4,20],[59,20],[26,20],[29,20],[[[18,[14]]],20],[39,20],[61,20],[57,20],[17,20],[26,20],[62,20],[24,20],[63,20],[-1,-1,[]],[42,20],[29,26],[42,26],[4,26],[60,26],[57,26],[39,26],[-1,-1,[]],[37,26],[62,26],[[[18,[14]]],26],[57,26],[63,26],[17,26],[[[18,[14]]],[[6,[1,49]]]],[17,[[6,[2]]]],[17,[[6,[16]]]],[[8,64],[[12,[65]]]],[[-1,-2,-3],[[6,[[12,[[4,[20,13]]]],5]]],[],[[34,[13]]],[[35,[10]]]],[[3,-1,-2],[[6,[[12,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[8,-1,-2],[[6,[[12,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[3,2],[8,2],[[-1,-2,-3],[[6,[[18,[[4,[20,13]]]],5]]],[],[[34,[13]]],[[35,[10]]]],[[3,-1,-2],[[6,[[18,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[8,-1,-2],[[6,[[18,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[-1,-2,-3,[15,[16]]],[[6,[[18,[[4,[20,13]]]],5]]],[],[[34,[13]]],[[35,[10]]]],[[3,-1,-2,[15,[16]]],[[6,[[18,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[8,-1,-2,[15,[16]]],[[6,[[18,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[-1,-2,-3,[15,[16]]],[[6,[[12,[[4,[20,13]]]],5]]],[],[[34,[13]]],[[35,[10]]]],[[3,-1,-2,[15,[16]]],[[6,[[12,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[8,-1,-2,[15,[16]]],[[6,[[12,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[-1,16],[[12,[1]]],[]],[[3,16],[[12,[1]]]],[[3,16],[[12,[1]]]],[[8,16],[[12,[1]]]],[[3,[15,[16]]],[[18,[1]]]],[[8,[15,[16]]],[[18,[1]]]],[[3,3],[[18,[1]]]],[[8,8],[[18,[1]]]],[[-1,-2,11,[12,[[15,[16]]]]],[[6,[22,5]]],[],[[34,[13]]]],[[3,-1,11,[12,[[15,[16]]]]],[[6,[22,5]]],[[34,[13]]]],[[8,-1,11,[12,[[15,[16]]]]],[[6,[22,5]]],[[34,[13]]]],[[-1,-2,22,[12,[[15,[16]]]]],[[6,[11,5]]],[],[[34,[13]]]],[[3,-1,22,[12,[[15,[16]]]]],[[6,[11,5]]],[[34,[13]]]],[[8,-1,22,[12,[[15,[16]]]]],[[6,[11,5]]],[[34,[13]]]],[3,[[18,[16]]]],[8,[[18,[16]]]],[3,[[12,[1]]]],[8,[[12,[1]]]],[[-1,-2,11,[12,[[15,[16]]]]],[[6,[66,5]]],[],[[34,[13]]]],[[3,-1,11,[12,[[15,[16]]]]],[[6,[66,5]]],[[34,[13]]]],[[8,-1,11,[12,[[15,[16]]]]],[[6,[66,5]]],[[34,[13]]]],[[-1,[15,[16]]],[[18,[16]]],[]],[[3,[15,[16]]],[[18,[16]]]],[[3,[15,[16]]],[[18,[16]]]],[[8,[15,[16]]],[[18,[16]]]],[3,30],[1,16],[[13,-1],4,67],[[2,-1],4,67],[[24,-1],4,67],[[16,-1],4,67],0,[[3,13],[[12,[16]]]],[[8,13],[[12,[16]]]],0,[[3,[12,[[15,[16]]]]],59],[[8,[12,[[15,[16]]]]],59],0,0,[[3,-1,-2,29],[[6,[4,5]]],[[34,[13]]],[[35,[10]]]],[[3,-1,11,-2],[[6,[4,5]]],[[34,[13]]],[[35,[26]]]],[[3,-1,11,24],[[6,[13,5]]],[[34,[13]]]],[29,20],[3,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[6,[[18,[14]],20]]]],[26,[[6,[[18,[14]],26]]]],[-1,-2,[],[]],[20,20],[20,[[6,[26,20]]]],[20,[[6,[57,20]]]],[26,[[6,[57,26]]]],[20,39],[26,39],[20,39],[26,39],[20,39],[26,39],[8,39],[1,39],[20,39],[26,39],[20,39],[26,39],[20,39],[26,39],[20,39],[20,39],[24,39],[20,39],[26,39],[20,39],[26,39],[20,39],[26,39],[[3,[15,[16]]],4],0,[[-1,-2],68,[],[[34,[13]]]],[[3,-1],68,[[34,[13]]]],[[8,-1],68,[[34,[13]]]],[[-1,-2,[15,[16]]],68,[],[[34,[13]]]],[[3,-1,[15,[16]]],68,[[34,[13]]]],[[8,-1,[15,[16]]],68,[[34,[13]]]],[1,11],[[-1,-2],11,[],[[34,[13]]]],[[3,-1],11,[[34,[13]]]],[[8,-1],11,[[34,[13]]]],[[-1,-2,[15,[16]]],11,[],[[34,[13]]]],[[3,-1,[15,[16]]],11,[[34,[13]]]],[[8,-1,[15,[16]]],11,[[34,[13]]]],[[],20],[[-1,-2,-3],[[69,[-3]]],[],[[34,[13]]],[[70,[11]]]],[[3,-1,-2],[[69,[-2]]],[[34,[13]]],[[70,[11]]]],[[8,-1,-2],[[69,[-2]]],[[34,[13]]],[[70,[11]]]],[[-1,-2,-3,[15,[16]]],[[69,[-3]]],[],[[34,[13]]],[[70,[11]]]],[[3,-1,-2,[15,[16]]],[[69,[-2]]],[[34,[13]]],[[70,[11]]]],[[8,-1,-2,[15,[16]]],[[69,[-2]]],[[34,[13]]],[[70,[11]]]],[[[15,[14]]],[[6,[3,5]]]],[[[15,[14]]],[[6,[8,5]]]],[[3,[15,[14]]],[[6,[11,5]]]],[[8,[15,[14]]],[[6,[11,5]]]],[[8,[15,[14]],9],[[6,[11,5]]]],[[[15,[14]]],[[6,[3,5]]]],[[[15,[14]]],[[6,[8,5]]]],[[[15,[14]],21,53],[[6,[3,5]]]],[[[15,[14]],21,53,9],[[6,[8,5]]]],[[[15,[14]],32],[[6,[3,5]]]],[[[15,[14]],32],[[6,[8,5]]]],[[3,9],[[18,[31]]]],[[8,9],[[18,[31]]]],[[],20],[[-1,-2,-3],[[71,[-3]]],[],[[34,[13]]],[[70,[57]]]],[[3,-1,-2],[[71,[-2]]],[[34,[13]]],[[70,[57]]]],[[8,-1,-2],[[71,[-2]]],[[34,[13]]],[[70,[57]]]],[[-1,-2,-3,[15,[16]]],[[71,[-3]]],[],[[34,[13]]],[[70,[57]]]],[[3,-1,-2,[15,[16]]],[[71,[-2]]],[[34,[13]]],[[70,[57]]]],[[8,-1,-2,[15,[16]]],[[71,[-2]]],[[34,[13]]],[[70,[57]]]],[[3,-1,72,73],[[6,[4,5]]],[[34,[13]]]],0,[[-1,-2],[[6,[[18,[72]],5]]],[],[[34,[13]]]],[[3,-1],[[6,[[18,[72]],5]]],[[34,[13]]]],[[8,-1],[[6,[[18,[72]],5]]],[[34,[13]]]],[[-1,-2,[15,[16]]],[[6,[[18,[72]],5]]],[],[[34,[13]]]],[[3,-1,[15,[16]]],[[6,[[18,[72]],5]]],[[34,[13]]]],[[8,-1,[15,[16]]],[[6,[[18,[72]],5]]],[[34,[13]]]],[1,62],[[3,3],[[6,[[18,[16]],5]]]],[[8,8],[[6,[[18,[16]],5]]]],[[8,8,9],[[6,[[18,[16]],5]]]],[1,[[12,[57]]]],0,[[32,45],32],[[],3],[[],32],[[],8],[52,12],0,[[-1,-2],[[6,[24,5]]],[],[[34,[13]]]],[[3,-1],[[6,[24,5]]],[[34,[13]]]],[[8,-1],[[6,[24,5]]],[[34,[13]]]],[[32,21],32],0,0,[1,[[15,[2]]]],[[-1,-2],[[6,[52,5]]],[],[[34,[13]]]],[[3,-1],[[6,[52,5]]],[[34,[13]]]],[[8,-1],[[6,[52,5]]],[[34,[13]]]],[[-1,-2,[15,[16]]],[[6,[52,5]]],[],[[34,[13]]]],[[3,-1,[15,[16]]],[[6,[52,5]]],[[34,[13]]]],[[8,-1,[15,[16]]],[[6,[52,5]]],[[34,[13]]]],[[13,13],[[12,[27]]]],[[2,2],[[12,[27]]]],[[10,10],[[12,[27]]]],[[16,16],[[12,[27]]]],[[32,9],32],0,[52,[[18,[[4,[13,10]]]]]],[3,11],0,[[3,-1,-2,-3],[[6,[4,5]]],[[34,[13]]],[[35,[10]]],[[35,[26]]]],[[3,-1,-2,24],[[6,[13,5]]],[[34,[13]]],[[35,[10]]]],[[],2],[1,[[15,[14]]]],[[8,64,65],[[6,[4,5]]]],[[8,64,65,9],[[6,[4,5]]]],[3,4],0,[3,11],[3,[[18,[14]]]],[8,[[18,[14]]]],[[3,[15,[16]]],[[18,[14]]]],[[8,[15,[16]]],[[18,[14]]]],[3,[[6,[[18,[14]],5]]]],[8,[[6,[[18,[14]],5]]]],[3,[[18,[14]]]],[3,[[18,[14]]]],[8,[[18,[14]]]],[[3,33],[[18,[14]]]],[[8,33],[[18,[14]]]],[1,62],0,[[[46,[-1]],-2],6,48,74],[[13,-1],6,74],[[23,-1],6,74],[[2,-1],6,74],[[24,-1],6,74],[[16,-1],6,74],[[26,-1],6,74],[[3,2],3],[[8,2],8],[[3,30],4],[5,[[12,[75]]]],[54,[[12,[75]]]],[[3,-1,11,76,-2],[[6,[4,5]]],[[34,[13]]],7],[[3,-1,11,76,17],[[6,[4,5]]],[[34,[13]]]],[1,77],0,[17,20],0,[3,[[0,[78]]]],[[],20],[[-1,-2],[[6,[57,5]]],[],[[34,[13]]]],[[3,-1],[[6,[57,5]]],[[34,[13]]]],[[8,-1],[[6,[57,5]]],[[34,[13]]]],[[],20],[[-1,-2,[15,[16]]],[[6,[57,5]]],[],[[34,[13]]]],[[3,-1,[15,[16]]],[[6,[57,5]]],[[34,[13]]]],[[8,-1,[15,[16]]],[[6,[57,5]]],[[34,[13]]]],0,[1,29],[29,20],[20,[[12,[39]]]],[26,[[12,[39]]]],[22,[[18,[14]]]],[13,[[18,[14]]]],[2,[[15,[14]]]],[20,[[12,[[15,[14]]]]]],[26,[[12,[[15,[14]]]]]],[20,[[12,[42]]]],[26,[[12,[42]]]],[2,57],[20,[[12,[29]]]],[26,[[12,[29]]]],[20,[[12,[24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[-1,-2,[],[]],[20,[[12,[26]]]],[20,[[12,[17]]]],[26,[[12,[17]]]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[20,[[12,[62]]]],[26,[[12,[62]]]],[[8,-1],[[79,[-2,-3]]],80,[],[]],[[8,30,-1],[[79,[-2,-3]]],80,[],[]],[[8,30,-1,-2],[[79,[-3,-4]]],80,80,[],[]],[[8,-1,-2],[[79,[-3,-4]]],80,80,[],[]],0,[8,81],[[8,9,[15,[16]]],81],[[8,9],81],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[15,[14]]],[[6,[1]]]],[-1,[[6,[-2]]],[],[]],[[[18,[14]]],[[6,[22]]]],[-1,[[6,[-2]]],[],[]],[17,[[6,[22]]]],[57,[[6,[22]]]],[[[15,[14]]],[[6,[22]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[15,[14]]],[[6,[13]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[57,[[6,[2]]]],[-1,[[6,[-2]]],[],[]],[17,[[6,[2]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[15,[14]]],[[6,[16]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[62,20],[[3,-1,17,11,11,73],[[6,[4,5]]],[[34,[13]]]],[3,4],[[-1,-2],83,[],[[34,[13]]]],[[3,-1],83,[[34,[13]]]],[[8,-1],83,[[34,[13]]]],[[-1,-2,[15,[16]]],83,[],[[34,[13]]]],[[3,-1,[15,[16]]],83,[[34,[13]]]],[[8,-1,[15,[16]]],83,[[34,[13]]]],[[32,53],32],0,[52,[[12,[[18,[[4,[13,10]]]]]]]],[[3,[12,[[18,[13]]]]],57],[[8,[12,[[18,[13]]]]],57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,2],3],[[8,2],8],[[3,30],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[59,-1],[[6,[4,0]]],7],[59,[[12,[84]]]],[59,[[12,[85]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[86,86],[85,85],[87,87],[88,88],[59,59],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[],84],[[],85],[[],88],[85],[85],[[84,84],39],[[86,86],39],[[85,85],39],[[87,87],39],[[88,88],39],[[59,59],39],[[84,43],44],[[86,43],44],[[85,43],44],[[87,43],44],[[88,43],44],[[59,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[89,[17,59]]],85],[-1,-1,[]],[-1,-1,[]],[[[18,[59]]],59],[-1,59,[[35,[26]]]],[20,59],[[[89,[17,59]]],59],[-1,-1,[]],[[84,11],[[12,[59]]]],[[85,17],[[12,[59]]]],[[84,11],[[12,[59]]]],[[85,17],[[12,[59]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,39],[59,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[69,[-1]]],[[70,[11]]]],[[],[[71,[-1]]],[[70,[57]]]],[[],68],[[],83],[[90,90],39],[[[69,[-1]],43],44,[[70,[11]]]],[[[71,[-1]],43],44,[[70,[57]]]],[[68,43],44],[[91,43],44],[[90,43],44],[[83,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[91,[[12,[66]]]],[-1,[[4,[-2,-3]]],[],[],[]],[[17,20,13,39],90],[[[69,[-1]]],12,[[70,[11]]]],[[[71,[-1]]],12,[[70,[57]]]],[68,12],[83,12],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[73,39],[73,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[66,66],[92,92],[73,73],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[],66],[[],73],0,[[72,72],39],[[66,66],39],[[92,92],39],[[73,73],39],[[72,43],44],[[66,43],44],[[92,43],44],[[92,43],44],[[73,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[39,39],73],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[66,39],[66,[[0,[93]]]],[66,11],[72,17],0,[[57,-1,11,11],72,[[35,[26]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,57,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[72,26],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[94,94],[9,9],[30,30],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[],30],[[31,31],39],[[94,94],39],[[30,30],39],[[31,43],44],[[94,43],44],[[94,43],44],[[9,43],44],[[30,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[30,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,39],[30,39],[[39,30],9],[[],9],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,57,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[95,95],[64,64],[96,96],[65,65],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[95,16],39],[[[15,[14]]],[[6,[64,97]]]],[[[15,[14]]],[[6,[65,98]]]],[[],95],[[],64],[[],96],[64,[[18,[14]]]],[65,[[18,[14]]]],[[95,95],39],[[64,64],39],[[96,96],39],[[65,65],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[95,43],44],[[99,43],44],[[99,43],44],[[97,43],44],[[97,43],44],[[64,43],44],[[96,43],44],[[98,43],44],[[98,43],44],[[65,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,95,100],[[-1,64],[[12,[65]]],[]],[[95,-1],4,67],[[64,-1],4,67],[[96,-1],4,67],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],64],[[-1,64,65],[[6,[4,5]]],[]],[[-1,64,65,9],[[6,[4,5]]],[]],0,[[95,-1],6,74],[[96,-1],6,74],[[65,-1],6,74],0,[98,[[12,[75]]]],0,0,0,[95,[[18,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,57,[]],[-1,57,[]],[-1,57,[]],[-1,[[6,[-2]]],[],[]],[[[15,[14]]],[[6,[95]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[18,[16]]],[]],[81,[[18,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[81,[[4,[[12,[16]],9]]]],[[81,28],[[4,[[12,[16]],9]]]],[[],28],[[-1,-2,-3],[[6,[4,5]]],[],[[34,[13]]],[[35,[10]]]],[[81,-1,-2],[[6,[4,5]]],[[34,[13]]],[[35,[10]]]],[81,4],0,[[28,43],44],[[81,43],44],[[[101,[-1]],43],44,47],[[[102,[-1]],43],44,47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[81,-1,-2],[[6,[[12,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[81,-1,-2],[[6,[[18,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[81,-1,-2,[15,[16]]],[[6,[[18,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[81,-1,-2,[15,[16]]],[[6,[[12,[[4,[20,13]]]],5]]],[[34,[13]]],[[35,[10]]]],[[81,16],[[12,[1]]]],[[81,-1,11,[12,[[15,[16]]]]],[[6,[22,5]]],[[34,[13]]]],[[81,-1,22,[12,[[15,[16]]]]],[[6,[11,5]]],[[34,[13]]]],[81,[[18,[16]]]],[[81,-1,11,[12,[[15,[16]]]]],[[6,[66,5]]],[[34,[13]]]],[[81,[15,[16]]],[[18,[16]]]],0,[[81,13],[[12,[16]]]],[[-1,-2,-3,29],[[6,[4,5]]],[],[[34,[13]]],[[35,[10]]]],[[81,-1,-2,29],[[6,[4,5]]],[[34,[13]]],[[35,[10]]]],[[-1,-2,11,-3],[[6,[4,5]]],[],[[34,[13]]],[[35,[26]]]],[[81,-1,11,-2],[[6,[4,5]]],[[34,[13]]],[[35,[26]]]],[[-1,-2,11,24],[[6,[13,5]]],[],[[34,[13]]]],[[81,-1,11,24],[[6,[13,5]]],[[34,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[81,-1],68,[[34,[13]]]],[[81,-1,[15,[16]]],68,[[34,[13]]]],[[81,-1],11,[[34,[13]]]],[[81,-1,[15,[16]]],11,[[34,[13]]]],[[81,-1,-2],[[69,[-2]]],[[34,[13]]],[[70,[11]]]],[[81,-1,-2,[15,[16]]],[[69,[-2]]],[[34,[13]]],[[70,[11]]]],[[81,-1,-2],[[71,[-2]]],[[34,[13]]],[[70,[57]]]],[[81,-1,-2,[15,[16]]],[[71,[-2]]],[[34,[13]]],[[70,[57]]]],[[-1,-2,72,73],[[6,[4,5]]],[],[[34,[13]]]],[[81,-1,72,73],[[6,[4,5]]],[[34,[13]]]],[[81,-1],[[6,[[18,[72]],5]]],[[34,[13]]]],[[81,-1,[15,[16]]],[[6,[[18,[72]],5]]],[[34,[13]]]],0,[[81,-1],[[6,[24,5]]],[[34,[13]]]],[[81,-1],[[6,[52,5]]],[[34,[13]]]],[[81,-1,[15,[16]]],[[6,[52,5]]],[[34,[13]]]],0,[-1,11,[]],[81,11],[[-1,-2,-3,-4],[[6,[4,5]]],[],[[34,[13]]],[[35,[10]]],[[35,[26]]]],[[81,-1,-2,-3],[[6,[4,5]]],[[34,[13]]],[[35,[10]]],[[35,[26]]]],[[-1,-2,-3,24],[[6,[13,5]]],[],[[34,[13]]],[[35,[10]]]],[[81,-1,-2,24],[[6,[13,5]]],[[34,[13]]],[[35,[10]]]],0,[81,11],[[28,-1],28,[[35,[57]]]],[[28,29],28],[[-1,-2,11,76,-3],[[6,[4,5]]],[],[[34,[13]]],7],[[81,-1,11,76,-2],[[6,[4,5]]],[[34,[13]]],7],[[-1,-2,11,76,17],[[6,[4,5]]],[],[[34,[13]]]],[[81,-1,11,76,17],[[6,[4,5]]],[[34,[13]]]],[[81,-1],[[6,[57,5]]],[[34,[13]]]],[[81,-1,[15,[16]]],[[6,[57,5]]],[[34,[13]]]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[-1,82,[]],[[-1,-2,17,11,11,73],[[6,[4,5]]],[],[[34,[13]]]],[[81,-1,17,11,11,73],[[6,[4,5]]],[[34,[13]]]],[[81,-1],83,[[34,[13]]]],[[81,-1,[15,[16]]],83,[[34,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,-1],28,[[35,[57]]]],[[28,29],28]],"c":[527,528],"p":[[3,"Change",0],[3,"ActorId",0],[3,"AutoCommit",0],[15,"tuple"],[4,"AutomergeError",0],[4,"Result",1450],[8,"IntoIterator",1451],[3,"Automerge",0],[3,"PatchLog",1098],[4,"Prop",0],[15,"usize"],[4,"Option",1452],[4,"ObjId",0],[15,"u8"],[15,"slice"],[3,"ChangeHash",0],[15,"str"],[3,"Vec",1453],[4,"Cow",1454],[4,"Value",0],[4,"OnPartialLoad",0],[3,"Cursor",0],[3,"ExpandedChange",0],[4,"ObjType",0],[4,"OpType",0],[4,"ScalarValue",0],[4,"Ordering",1455],[3,"CommitOptions",1338],[15,"i64"],[4,"TextRepresentation",1098],[3,"Patch",1098],[3,"LoadOptions",0],[3,"SaveOptions",0],[8,"AsRef",1456],[8,"Into",1456],[8,"Deserializer",1457],[15,"char"],[8,"FromIterator",1451],[15,"bool"],[3,"InvalidChangeHashSlice",0],[3,"Parent",0],[15,"f64"],[3,"Formatter",1458],[6,"Result",1458],[4,"StringMigration",0],[3,"AutoSerde",0],[8,"Debug",1458],[8,"ReadDoc",0],[4,"LoadChangeError",0],[3,"InvalidActorId",0],[4,"ObjIdFromBytesError",0],[3,"Parents",0],[4,"VerificationMode",0],[4,"ParseChangeHashError",0],[15,"array"],[3,"Uuid",1459],[3,"String",1460],[4,"FromHexError",1461],[4,"Value",828],[15,"u32"],[3,"SmolStr",1462],[15,"u64"],[15,"i32"],[3,"State",1195],[3,"Message",1195],[3,"MarkSet",1019],[8,"Hasher",1463],[3,"Keys",935],[3,"ListRange",935],[8,"RangeBounds",1464],[3,"MapRange",935],[3,"Mark",1019],[4,"ExpandMark",1019],[8,"Serializer",1465],[8,"Error",1466],[15,"isize"],[3,"NonZeroU64",1467],[8,"SyncDoc",1195],[6,"Result",1338],[8,"FnOnce",1468],[3,"Transaction",1338],[3,"TypeId",1469],[3,"Values",935],[3,"List",828],[3,"Map",828],[3,"ListValue",828],[3,"MapValue",828],[3,"Text",828],[3,"HashMap",1470],[3,"MapRangeItem",935],[3,"ListRangeItem",935],[3,"MarkData",1019],[8,"Iterator",1471],[4,"PatchAction",1098],[3,"BloomFilter",1195],[3,"Have",1195],[4,"DecodeStateError",1195],[4,"ReadMessageError",1195],[3,"DecodeBloomError",1195],[8,"ExactSizeIterator",1472],[3,"Success",1338],[3,"Failure",1338],[13,"InvalidValueType",823],[13,"IncorrectLength",825],[13,"Unknown",826],[13,"PutMap",1176],[13,"PutSeq",1176],[13,"Insert",1176],[13,"SpliceText",1176],[13,"DeleteSeq",1176],[13,"DeleteMap",1176],[13,"Mark",1176],[13,"Increment",1176],[13,"Conflict",1176],[13,"WrongType",1334],[13,"WrongType",1336],[8,"Transactable",1338]]},\
"automerge_test":{"doc":"","t":"NNNDNNNNEENNNNNNOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOFFFLLFFFFFLLFLLLLLLLLLLLLLMM","n":["Boolean","Bytes","Counter","ExportedOpId","F64","Int","Map","Null","OrdScalarValue","RealizedObject","Sequence","Str","Timestamp","Uint","Unknown","Value","assert_doc","assert_obj","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","list","map","mk_counter","new_doc","new_doc_with_actor","partial_cmp","partial_cmp","pretty_panic","pretty_print","realize","realize_obj","realize_prop","serialize","serialize","sorted_actors","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","bytes","type_code"],"q":[[0,"automerge_test"],[86,"automerge_test::OrdScalarValue"],[88,"core::cmp"],[89,"core::fmt"],[90,"core::fmt"],[91,"automerge::value"],[92,"alloc::collections::btree::set"],[93,"core::convert"],[94,"alloc::collections::btree::map"],[95,"core::hash"],[96,"automerge::autocommit"],[97,"automerge::types"],[98,"core::option"],[99,"automerge::automerge"],[100,"automerge::read"],[101,"automerge::exid"],[102,"automerge::types"],[103,"serde::ser"],[104,"alloc::string"],[105,"core::any"]],"d":["","","","","","","","","","A <code>RealizedObject</code> is a representation of all the current …","","","","","","","This macro makes it easy to make assertions about a …","Like <code>assert_doc</code> except that you can specify an object ID …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct <code>RealizedObject::Sequence</code>. This macro represents …","Construct <code>RealizedObject::Map</code>. This macro takes a nested …","","","","","","","Pretty print the contents of a document","","","","","","Returns two actor IDs, the first considered to  be ordered …","","","","","","","","","","","","","","",""],"i":[3,3,3,0,3,3,1,3,0,0,1,3,3,3,3,1,0,0,4,1,3,4,1,3,1,3,4,1,3,4,1,3,4,4,1,3,4,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,4,1,3,4,1,3,0,0,0,0,0,1,3,0,0,0,0,0,1,3,0,4,4,1,3,4,1,3,4,1,3,4,1,3,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],2],[[3,3],2],[[4,4],5],[[1,1],5],[[3,3],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[4,6],7],[[4,6],7],[[1,6],7],[[3,6],7],[-1,-1,[]],[[[9,[8]]],1],[10,1],[11,1],[-1,-1,[]],[12,1],[13,1],[5,1],[14,1],[[[9,[[15,[-1]]]]],1,[[16,[1]]]],[17,1],[[[18,[17,[15,[-1]]]]],1,[[16,[1]]]],[8,1],[19,1],[-1,-1,[]],[10,3],[[4,-1],20,21],[[1,-1],20,21],[[3,-1],20,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[14,10],[[],22],[23,22],[[1,1],[[24,[2]]]],[[3,3],[[24,[2]]]],[[1,1],20],[25,20],[-1,1,26],[[-1,27,28],1,26],[[-1,27,-2],1,26,[[16,[29]]]],[[1,-1],30,31],[[3,-1],30,31],[[],[[20,[23,23]]]],[-1,32,[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[4,"RealizedObject",0],[4,"Ordering",88],[4,"OrdScalarValue",0],[3,"ExportedOpId",0],[15,"bool"],[3,"Formatter",89],[6,"Result",89],[15,"u64"],[3,"Vec",90],[4,"ScalarValue",91],[15,"u32"],[15,"usize"],[15,"i32"],[15,"i64"],[3,"BTreeSet",92],[8,"Into",93],[15,"str"],[3,"BTreeMap",94],[15,"f64"],[15,"tuple"],[8,"Hasher",95],[3,"AutoCommit",96],[3,"ActorId",97],[4,"Option",98],[3,"Automerge",99],[8,"ReadDoc",100],[4,"ExId",101],[4,"ObjType",97],[4,"Prop",97],[4,"Result",102],[8,"Serializer",103],[3,"String",104],[3,"TypeId",105],[13,"Unknown",86]]},\
"automerge_wasm":{"doc":"","t":"NDNELLLLLLLLLLLFFFLLLLLLLLLLLFFFLLAFLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEENNNNNNNNNNNNNDNNEENENEDNNNNEENNNNNNNNNNEEENNNNNNNNNNNNNNEENEEDNNDNENENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Array","Automerge","String","TextRepresentation","apply_and_return_patches","apply_changes","apply_patches","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","commit","decode_change","decode_sync_message","decode_sync_state","default","delete","describe","describe","describe_vector","describe_vector","diff","diff_incremental","dump","empty_change","enable_freeze","encode_change","encode_sync_message","encode_sync_state","eq","equivalent","error","export_sync_state","fmt","fmt","fork","from","from","from_abi","from_abi","generate_sync_message","get","get_actor_id","get_all","get_change_by_hash","get_changes","get_changes_added","get_cursor","get_cursor_position","get_heads","get_last_local_change","get_missing_deps","get_with_type","import_sync_state","increment","init","init_sync_state","insert","insert_object","integrate","into","into","into_abi","into_abi","is_none","is_none","isolate","keys","length","load","load_incremental","long_ref_from_abi","mark","marks","marks_at","materialize","merge","new","none","none","pending_ops","push","push_object","put","put_object","receive_sync_message","ref_from_abi","ref_mut_from_abi","register_datatype","reset_diff_cursor","return_abi","return_abi","rollback","save","save_and_verify","save_incremental","save_nocompress","save_since","splice","text","to_js","to_owned","try_from","try_from","try_from_js_value","try_from_js_value","try_into","try_into","type_id","type_id","unmark","update_diff_cursor","vector_from_abi","vector_from_abi","vector_into_abi","vector_into_abi","vzip","vzip","Apply","ApplyChangesError","ApplyPatch","Automerge","Automerge","Automerge","Automerge","Automerge","Automerge","Automerge","Automerge","Automerge","Automerge","Automerge","BadActor","BadActor","BadActorId","BadChangeHashes","BadHeads","BadSyncMessage","Cursor","Decode","DecodeChange","DecodeChanges","Diff","EncodeChange","Expand","Export","Export","Export","Fork","Get","Heads","Heads","Heads","Heads","ImportObj","ImportObj","ImportObj","ImportObj","ImportObj","ImportObj","Increment","Insert","InsertObject","Interop","InvalidCursor","InvalidEnd","InvalidName","InvalidObjType","InvalidProp","InvalidProp","InvalidProp","InvalidProp","InvalidRange","InvalidStart","InvalidValue","InvalidValue","InvalidValue","Isolate","Load","Load","Mark","Materialize","Merge","NotObjectd","PatchCallback","PopPatches","ReadMessage","ReceiveSyncMessage","Serialize","Splice","ValueNotNumeric","ValueNotObject","ValueNotPrimitive","ValueNotPrimitive","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"automerge_wasm"],[121,"automerge_wasm::error"],[470,"wasm_bindgen"],[471,"core::result"],[472,"alloc::string"],[473,"core::option"],[474,"js_sys"],[475,"js_sys"],[476,"core::fmt"],[477,"alloc::boxed"],[478,"hex::error"],[479,"automerge::error"],[480,"automerge::sync"],[481,"serde_json::error"],[482,"serde_wasm_bindgen::error"],[483,"automerge::change"],[484,"core::error"]],"d":["As an array of characters and objects","","As a single JS string","How text is represented in materialized objects on the JS …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,0,6,0,1,1,1,6,1,6,1,6,1,6,1,0,0,0,6,1,6,1,6,1,1,1,1,1,1,0,0,0,6,6,0,0,6,1,1,6,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,6,1,6,1,6,1,1,1,1,0,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,6,6,1,6,1,6,1,6,1,1,1,6,1,6,1,6,1,5,0,0,22,14,35,26,27,25,16,24,34,29,30,22,29,0,22,14,0,0,34,0,5,0,0,30,39,16,32,0,0,16,28,32,24,14,35,26,27,25,30,0,0,0,39,24,30,30,24,14,26,27,25,30,30,26,27,30,0,0,12,0,0,0,39,39,0,13,0,12,0,25,27,35,26,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,9,5,5,22,22,33,33,14,14,35,35,26,26,27,27,25,25,13,13,39,39,17,17,16,16,28,28,32,32,24,24,34,34,29,29,18,18,12,12,30,30,9,9,5,5,22,22,22,33,33,14,14,35,35,26,26,27,27,25,25,13,13,39,17,16,16,28,32,24,24,34,34,34,29,29,29,18,18,12,12,12,30,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30,9,5,22,33,14,35,26,27,25,13,39,17,16,28,32,24,34,29,18,12,30],"f":[0,0,0,0,[[1,2,2],[[3,[2,2]]]],[[1,2],[[3,[4,5]]]],[[1,2,2],[[3,[2,2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[1,[8,[7]]],[[3,[1,9]]]],[[-1,-2],4,[],[]],[[1,[8,[7]],[8,[10]]],2],[11,[[3,[2,12]]]],[11,[[3,[2,13]]]],[11,[[3,[0,0]]]],[[],6],[[1,2,2],[[3,[4,14]]]],[[],4],[[],4],[[],4],[[],4],[[1,15,15],[[3,[15,16]]]],[1,[[3,[15,17]]]],[1,4],[[1,[8,[7]],[8,[10]]],2],[[1,2],[[3,[2,2]]]],[2,[[3,[11,18]]]],[2,[[3,[11,0]]]],0,[[6,6],19],[[-1,-2],19,[],[]],0,0,[[6,20],21],[[1,20],21],[[1,[8,[7]],2],[[3,[1,22]]]],[-1,-1,[]],[-1,-1,[]],[23,6],[23,1],0,[[1,2,2,[8,[15]]],[[3,[2,14]]]],[1,7],[[1,2,2,[8,[15]]],[[3,[15,14]]]],[[1,2],[[3,[2,0]]]],[[1,2],[[3,[15,14]]]],[[1,1],15],[[1,2,10,[8,[15]]],[[3,[7,24]]]],[[1,2,2,[8,[15]]],[[3,[10,24]]]],[1,15],[1,2],[[1,[8,[15]]],[[3,[15,14]]]],[[1,2,2,[8,[15]]],[[3,[2,14]]]],[2,[[3,[0,0]]]],[[1,2,2,2],[[3,[4,25]]]],[2,[[3,[1,9]]]],0,[[1,2,10,2,2],[[3,[4,26]]]],[[1,2,10,2],[[3,[[8,[7]],27]]]],[1,4],[-1,-2,[],[]],[-1,-2,[],[]],[6,23],[1,23],[23,19],[[],19],[[1,15],[[3,[4,28]]]],[[1,2,[8,[15]]],[[3,[15,14]]]],[[1,2,[8,[15]]],[[3,[10,14]]]],[[11,2],[[3,[1,29]]]],[[1,11],[[3,[10,29]]]],[[]],[[1,2,2,2,2,2],[[3,[4,30]]]],[[1,2,[8,[15]]],[[3,[2,2]]]],[[1,2,10,[8,[15]]],[[3,[31,2]]]],[[1,2,[8,[15]],2],[[3,[2,32]]]],[[1,1],[[3,[15,33]]]],[[[8,[7]],6],[[3,[1,9]]]],[[]],[[]],[1,2],[[1,2,2,2],[[3,[4,26]]]],[[1,2,2],[[3,[[8,[7]],27]]]],[[1,2,2,2,2],[[3,[4,26]]]],[[1,2,2,2],[[3,[2,27]]]],0,[[]],[[]],[[1,2,2],[[3,[4,0]]]],[1,4],[-1,[],[]],[-1,[],[]],[1,10],[1,11],[1,[[3,[11,29]]]],[1,11],[1,11],[[1,15],[[3,[11,0]]]],[[1,2,10,10,2],[[3,[4,35]]]],[[1,2,[8,[15]]],[[3,[7,14]]]],[[1,2],[[3,[2,0]]]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[2,[[3,[6]]]],[2,[[3,[1]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[[1,2,2,2],[[3,[4,30]]]],[1,4],[[],[[38,[[37,[6]]]]]],[[],[[38,[[37,[1]]]]]],[[[38,[[37,[6]]]]]],[[[38,[[37,[1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,20],21],[[9,20],21],[[5,20],21],[[5,20],21],[[22,20],21],[[22,20],21],[[33,20],21],[[33,20],21],[[14,20],21],[[14,20],21],[[35,20],21],[[35,20],21],[[26,20],21],[[26,20],21],[[27,20],21],[[27,20],21],[[25,20],21],[[25,20],21],[[13,20],21],[[13,20],21],[[39,20],21],[[39,20],21],[[17,20],21],[[17,20],21],[[16,20],21],[[16,20],21],[[28,20],21],[[28,20],21],[[32,20],21],[[32,20],21],[[24,20],21],[[24,20],21],[[34,20],21],[[34,20],21],[[29,20],21],[[29,20],21],[[18,20],21],[[18,20],21],[[12,20],21],[[12,20],21],[[30,20],21],[[30,20],21],[-1,-1,[]],[40,9],[41,5],[-1,-1,[]],[-1,-1,[]],[41,22],[9,22],[-1,-1,[]],[41,33],[41,14],[-1,-1,[]],[41,35],[-1,-1,[]],[41,26],[-1,-1,[]],[41,27],[-1,-1,[]],[-1,-1,[]],[41,25],[42,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,24],[42,34],[41,34],[-1,-1,[]],[-1,-1,[]],[41,29],[9,29],[43,18],[-1,-1,[]],[44,12],[-1,-1,[]],[45,12],[-1,-1,[]],[41,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[8,[46]]]],[5,[[8,[46]]]],[22,[[8,[46]]]],[33,[[8,[46]]]],[14,[[8,[46]]]],[35,[[8,[46]]]],[26,[[8,[46]]]],[27,[[8,[46]]]],[25,[[8,[46]]]],[13,[[8,[46]]]],[39,[[8,[46]]]],[17,[[8,[46]]]],[16,[[8,[46]]]],[28,[[8,[46]]]],[32,[[8,[46]]]],[24,[[8,[46]]]],[34,[[8,[46]]]],[29,[[8,[46]]]],[18,[[8,[46]]]],[12,[[8,[46]]]],[30,[[8,[46]]]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Automerge",0],[3,"JsValue",470],[4,"Result",471],[15,"tuple"],[4,"ApplyChangesError",121],[4,"TextRepresentation",0],[3,"String",472],[4,"Option",473],[3,"BadActorId",121],[15,"f64"],[3,"Uint8Array",474],[4,"DecodeChange",121],[4,"BadSyncMessage",121],[4,"Get",121],[3,"Array",474],[4,"Diff",121],[3,"PopPatches",121],[3,"EncodeChange",121],[15,"bool"],[3,"Formatter",475],[6,"Result",475],[4,"Fork",121],[15,"u32"],[4,"Cursor",121],[4,"Increment",121],[4,"Insert",121],[4,"InsertObject",121],[4,"Isolate",121],[4,"Load",121],[4,"Mark",121],[3,"Object",474],[4,"Materialize",121],[3,"Merge",121],[4,"ReceiveSyncMessage",121],[4,"Splice",121],[3,"TypeId",476],[15,"slice"],[3,"Box",477],[4,"ApplyPatch",121],[4,"FromHexError",478],[4,"AutomergeError",479],[4,"ReadMessageError",480],[3,"Error",481],[3,"Error",482],[4,"LoadError",483],[8,"Error",484]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
