(function() {var implementors = {};
implementors["automerge"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/enum.LoadChangeError.html\" title=\"enum automerge::LoadChangeError\">LoadError</a>","synthetic":false,"types":["automerge::change::LoadError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/enum.AutomergeError.html\" title=\"enum automerge::AutomergeError\">AutomergeError</a>","synthetic":false,"types":["automerge::error::AutomergeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"automerge/struct.InvalidActorId.html\" title=\"struct automerge::InvalidActorId\">InvalidActorId</a>","synthetic":false,"types":["automerge::error::InvalidActorId"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"automerge/struct.InvalidChangeHashSlice.html\" title=\"struct automerge::InvalidChangeHashSlice\">InvalidChangeHashSlice</a>","synthetic":false,"types":["automerge::error::InvalidChangeHashSlice"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/sync/enum.DecodeStateError.html\" title=\"enum automerge::sync::DecodeStateError\">DecodeError</a>","synthetic":false,"types":["automerge::sync::state::DecodeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/sync/enum.ReadMessageError.html\" title=\"enum automerge::sync::ReadMessageError\">ReadMessageError</a>","synthetic":false,"types":["automerge::sync::ReadMessageError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()